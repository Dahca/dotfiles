"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Author:
"     Ian Glen Neal
"     ian.gl.neal@gmail.com
"     github.com/Dahca
"
" Sources:
"     http://dougblack.io/words/a-good-vimrc.html
"     https://amix.dk/vim/vimrc.html
"
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Leader is , (not default \)
let mapleader=","

" Make shift-tab into inverse tab for insert mode
inoremap <S-Tab> <C-d>

set backspace=indent,eol,start
" Show line numbers
set number
" Show command in bottom bar
set showcmd
" Highlight current line
set cursorline
" Visual autocomplete for command menu
set wildmenu
" Ignore compiled files
set wildignore=*.o,*~,*.pyc
" Redraw only when vim needs to.
set lazyredraw
" Highlight matching [{()}]
set showmatch
" Search as characters are entered (incremental search)
set incsearch
" Highlight matches.
set hlsearch
" Disable autoformatting of sentences to have two spaces at the beginning.
set nojoinspaces
" Turn off search highlight [ ,<space> ]
nnoremap <leader><space> :nohlsearch<CR>

" Set to auto read when a file is changed from the outside
set autoread

" Modeline -- file-specific vim settings.
set modeline
set modelines=5

" Folding!
set foldmethod=syntax

" Always show current position
set ruler
colorscheme elflord
syntax enable

" Movement

" Move vertically by visual line
nnoremap j gj
nnoremap k gk
" highlight last inserted text
nnoremap gV `[v`]

" Move annoying vim tmp files to a new backup location
set backup
set backupdir=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set backupskip=/tmp/*,/private/tmp/*
set directory=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set writebackup

" Load filetype-specific indent files
setlocal tabstop=2
setlocal softtabstop=2
setlocal shiftwidth=2
setlocal expandtab
setlocal cindent
filetype plugin indent on

" Set tabs differently depending on filetype
autocmd FileType markdown setl sw=4 sts=4 et
autocmd FileType make set noexpandtab

" Highlights the 81th column -- no text should be in the 81th column.
if exists('+colorcolumn')
  set colorcolumn=81
  highlight ColorColumn ctermbg=LightRed
else
  autocmd BufWinEnter * let w:m2=matchadd('ErrorMsg', '\%>81v.\+', -1)
endif

" Change spelling highlights
highlight clear SpellBad
highlight SpellBad cterm=bold ctermbg=DarkGray

" Trim trailing whitespace on save
fun! <SID>StripTrailingWhitespaces()
  let l = line(".")
  let c = col(".")
  %s/\s\+$//e
  call cursor(l, c)
endfun

autocmd BufWritePre * :call <SID>StripTrailingWhitespaces()

" For any secret configurations (anything that might contain an internal url or
" IP, for example)
if filereadable("~/.private/vimrc")
  source ~/.private/vimrc
endif

